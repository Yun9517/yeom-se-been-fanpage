{"version":3,"file":"static/js/356.d50dae31.chunk.js","mappings":"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","sources":["hooks/useFirestoreDocument.js","components/BeenTalk.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\n\nconst useFirestoreDocument = (collectionName, documentId) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const docRef = doc(db, collectionName, documentId);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n          setData(docSnap.data());\n          console.log(`useFirestoreDocument: Fetched data for ${collectionName}/${documentId}.`);\n        } else {\n          setData(null);\n          console.log(`useFirestoreDocument: No document found for ${collectionName}/${documentId}.`);\n        }\n      } catch (err) {\n        console.error(`useFirestoreDocument: Error fetching document ${collectionName}/${documentId}:`, err);\n        setError(`無法載入 ${collectionName} 內容，請稍後再試。`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [collectionName, documentId]);\n\n  return { data, loading, error };\n};\n\nexport default useFirestoreDocument;\n","import React, { useState, useEffect, useRef } from 'react'; // Added useRef\nimport './BeenTalk.css'; // Corrected import\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport useFirestoreDocument from '../hooks/useFirestoreDocument';\n\nconst BeenTalk = () => { // Corrected component name\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [genAI, setGenAI] = useState(null);\n  const { data: aboutContent, loading: aboutLoading, error: aboutError } = useFirestoreDocument('pages', 'about');\n  const messagesEndRef = useRef(null); // Created ref\n\n  useEffect(() => {\n    const apiKey = process.env.REACT_APP_GEMINI_API_KEY;\n    if (apiKey && !aboutLoading && !aboutError) {\n      const ai = new GoogleGenerativeAI(apiKey);\n      setGenAI(ai);\n    } else if (aboutError) {\n      console.error(\"Error loading about content:\", aboutError);\n    }\n  }, [aboutLoading, aboutError]);\n\n  // New useEffect for auto-scrolling\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\n    }\n  }, [messages]); // Dependency on messages array\n\n  const handleSend = async () => {\n    if (input.trim() === '' || !genAI || aboutLoading) return;\n\n    const userMessage = { sender: 'user', text: input };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\"});\n      let context = '';\n      if (aboutContent) {\n        context = `\n以下是網站關於廉世彬的介紹內容，請參考這些資訊來回答問題：\n${aboutContent.section2022Title}: ${aboutContent.section2022Content}\n${aboutContent.section2023Title}: ${aboutContent.section2023Content}\n${aboutContent.section2025Title}: ${aboutContent.section2025Content}\n`;\n      }\n\n      const prompt = `你是一位熱情且樂於助人的助理，也是啦啦隊員廉世彬（廉世彬）的超級粉絲。你的目標是精簡的回答有關她的問題。如果問題與她無關，請禮貌地拒絕並將話題引導回廉世彬。\n\n${context}\n\n以下是廉世彬的生涯經歷資訊：\n基本資料：\n出生: 2002年4月23日, 韓國首爾\n學歷: 白石藝術大學 實用音樂系\n出道日期: 2022年\n\n啦啦隊經歷：\n2022年: KEPCO Vixtorm Volleyball Team, Hana Bank Women's Basketball Team\n2023年: 起亞虎, 高陽索諾天空槍手\n2024年: 起亞虎, 安養正官庄赤紅火箭\n2025年: 樂天桃猿, NC恐龍\n\n音樂作品：\n2024年: Snooze - 새벽감성\n2025年: Snooze - Cherry Blooming\n\n問題：${input}`;\n      \n      const result = await model.generateContent(prompt);\n      const response = await result.response;\n      const text = response.text();\n\n      const botMessage = { sender: 'bot', text };\n      setMessages(prev => [...prev, botMessage]);\n\n    } catch (error) {\n      console.error(\"Error calling Gemini API:\", error);\n      const errorMessage = { sender: 'bot', text: '抱歉，我現在無法回答問題。請檢查 API 金鑰或稍後再試。' };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !isLoading) {\n      handleSend();\n    }\n  };\n\n  return (\n    <div className=\"beentalk-container\">\n      <div className=\"beentalk-header\">\n        <h2>彬Talk</h2>\n        <p>有想知道的都等你來問！</p>\n      </div>\n      <div className=\"beentalk-messages\" ref={messagesEndRef}> {/* Added ref */}\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n        {isLoading && <div className=\"message bot\">請稍等...</div>}\n      </div>\n      <div className=\"beentalk-input-area\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          placeholder={genAI ? (aboutLoading ? \"正在載入網站介紹內容...\" : \"輸入你想問的問題...\") : \"正在初始化，請稍候...\"}\n          disabled={isLoading || !genAI || aboutLoading}\n        />\n        <button onClick={handleSend} disabled={isLoading || !genAI || aboutLoading} className=\"btn btn-theme-gradient\">\n          傳送\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BeenTalk;"],"names":["useFirestoreDocument","collectionName","documentId","data","setData","useState","loading","setLoading","error","setError","useEffect","async","docRef","doc","db","docSnap","getDoc","exists","console","log","err","fetchData","BeenTalk","messages","setMessages","input","setInput","isLoading","setIsLoading","genAI","setGenAI","aboutContent","aboutLoading","aboutError","messagesEndRef","useRef","apiKey","process","ai","GoogleGenerativeAI","current","scrollTop","scrollHeight","handleSend","trim","userMessage","sender","text","prev","model","getGenerativeModel","context","section2022Title","section2022Content","section2023Title","section2023Content","section2025Title","section2025Content","prompt","result","generateContent","response","botMessage","errorMessage","_jsxs","className","children","_jsx","ref","map","msg","index","type","value","onChange","e","target","onKeyPress","key","placeholder","disabled","onClick"],"sourceRoot":""}