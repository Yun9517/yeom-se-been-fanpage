{"version":3,"file":"static/js/646.4f746b75.chunk.js","mappings":"qKAKA,MAWMA,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQC,0CACRC,WAAYD,yCACZE,UAAWF,yBACXG,cAAeH,6CACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAOXO,GAAKC,EAAAA,EAAAA,IAAaX,E,4ICdxB,MAAMY,EAAcC,IAAyB,IAAxB,QAAEC,EAAO,MAAEC,GAAOF,EACrC,MAAOG,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAC/BC,EAAe,8BAA8BL,kBAEnD,OACEM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CC,SACvDN,GAMAI,EAAAA,EAAAA,KAAA,UACEG,IAAK,iCAAiCT,eACtCC,MAAOA,EACPS,MAAM,2FACNC,iBAAe,KATjBC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,kBAAkBM,QAASA,IAAMV,GAAU,GAAMK,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,OAAKG,IAAKJ,EAAcS,IAAKb,EAAOM,UAAU,eAC9CD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBA4DzB,EA9CqBQ,KACnB,MAAOC,EAAYC,IAAiBb,EAAAA,EAAAA,UAAS,KACtCc,EAASC,IAAcf,EAAAA,EAAAA,WAAS,IAChCgB,EAAOC,IAAYjB,EAAAA,EAAAA,UAAS,MAoBnC,OAlBAkB,EAAAA,EAAAA,WAAU,KACYC,WAClB,IACE,MAAMC,GAAmBC,EAAAA,EAAAA,IAAW7B,EAAAA,GAAI,UAElC8B,SADuBC,EAAAA,EAAAA,IAAQH,IACHI,KAAKC,IAAIC,IAAG,CAAOC,GAAID,EAAIC,MAAOD,EAAIE,UACxEf,EAAcS,GACdP,GAAW,EACb,CAAE,MAAOc,GACPC,QAAQd,MAAM,wCAAyCa,GACvDZ,EAAS,kFACTF,GAAW,EACb,GAGFgB,IACC,KAGDvB,EAAAA,EAAAA,MAACwB,EAAAA,EAAS,CAACL,GAAG,SAASxB,UAAU,OAAMC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,uBAChCU,IACCN,EAAAA,EAAAA,MAAA,OAAKL,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAC+B,EAAAA,EAAO,CAACC,UAAU,SAASC,QAAQ,UACpCjC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAC,6BAGvBY,IAASd,EAAAA,EAAAA,KAACkC,EAAAA,EAAK,CAACD,QAAQ,SAAQ/B,SAAEY,KACjCF,IAAYE,IACZd,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAAAjC,SACDQ,EAAWa,IAAKa,IACfpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAACC,GAAI,EAAGrC,UAAU,OAAMC,UAC1BF,EAAAA,EAAAA,KAACR,EAAW,CAACE,QAAS0C,EAAMX,GAAI9B,MAAOyC,EAAMzC,SADbyC,EAAMX,U","sources":["firebase.js","components/VideoGallery.js"],"sourcesContent":["\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nconst db = getFirestore(app);\n\nexport { db };\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Spinner, Alert } from 'react-bootstrap';\nimport { db } from '../firebase';\nimport { collection, getDocs } from 'firebase/firestore';\n\nconst VideoPlayer = ({ videoId, title }) => {\n  const [loaded, setLoaded] = useState(false);\n  const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;\n\n  return (\n    <div className=\"ratio ratio-16x9 video-thumbnail-container\">\n      {!loaded ? (\n        <div className=\"video-thumbnail\" onClick={() => setLoaded(true)}>\n          <img src={thumbnailUrl} alt={title} className=\"img-fluid\" />\n          <div className=\"play-button\"></div>\n        </div>\n      ) : (\n        <iframe\n          src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\n          title={title}\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n      )}\n    </div>\n  );\n};\n\nconst VideoGallery = () => {\n  const [videosData, setVideosData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const videosCollection = collection(db, 'videos');\n        const videosSnapshot = await getDocs(videosCollection);\n        const videosList = videosSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n        setVideosData(videosList);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching videos from Firestore:\", err);\n        setError('無法載入影片，請稍後再試。');\n        setLoading(false);\n      }\n    };\n\n    fetchVideos();\n  }, []);\n\n  return (\n    <Container id=\"videos\" className=\"my-5\">\n      <h2 className=\"text-center mb-4\">影音區</h2>\n      {loading && (\n        <div className=\"text-center\">\n          <Spinner animation=\"border\" variant=\"dark\" />\n          <p className=\"mt-2\">載入中...</p>\n        </div>\n      )}\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      {!loading && !error && (\n        <Row>\n          {videosData.map((video) => (\n            <Col md={6} className=\"mb-4\" key={video.id}>\n              <VideoPlayer videoId={video.id} title={video.title} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default VideoGallery;"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","VideoPlayer","_ref","videoId","title","loaded","setLoaded","useState","thumbnailUrl","_jsx","className","children","src","allow","allowFullScreen","_jsxs","onClick","alt","VideoGallery","videosData","setVideosData","loading","setLoading","error","setError","useEffect","async","videosCollection","collection","videosList","getDocs","docs","map","doc","id","data","err","console","fetchVideos","Container","Spinner","animation","variant","Alert","Row","video","Col","md"],"sourceRoot":""}