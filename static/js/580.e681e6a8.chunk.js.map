{"version":3,"file":"static/js/580.e681e6a8.chunk.js","mappings":"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","sources":["components/Leaderboard.js","components/FanQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../firebase';\nimport { collection, query, orderBy, limit, onSnapshot } from 'firebase/firestore';\nimport { Table } from 'react-bootstrap';\nimport { FaTrophy } from 'react-icons/fa';\nimport './Leaderboard.css';\n\nconst Leaderboard = () => {\n  const [scores, setScores] = useState([]);\n\n  useEffect(() => {\n    const scoresCollection = collection(db, 'scores');\n    const q = query(scoresCollection, orderBy('score', 'desc'), limit(10));\n\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const scoresData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setScores(scoresData);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const getRankClass = (index) => {\n    if (index === 0) return 'rank-gold';\n    if (index === 1) return 'rank-silver';\n    if (index === 2) return 'rank-bronze';\n    return '';\n  };\n\n  return (\n    <div className=\"leaderboard-container mt-5\">\n      <Table striped bordered hover responsive variant=\"dark\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>玩家</th>\n            <th>分數</th>\n            <th>日期</th>\n          </tr>\n        </thead>\n        <tbody>\n          {scores.map((score, index) => (\n            <tr key={score.id} className={getRankClass(index)}>\n              <td className=\"rank-cell\">\n                {index < 3 ? <FaTrophy className=\"trophy-icon\" /> : index + 1}\n              </td>\n              <td>{score.userName}</td>\n              <td>{score.score}</td>\n              <td>{new Date(score.createdAt?.toDate()).toLocaleDateString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { FiRefreshCcw, FiLink } from 'react-icons/fi';\nimport { FaLine } from 'react-icons/fa';\nimport { Spinner, Alert, Accordion } from 'react-bootstrap'; // Import Accordion\nimport './FanQuiz.css';\n\nimport { db, auth } from '../firebase';\nimport { collection, getDocs, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport Leaderboard from './Leaderboard';\n\n// Helper function to get random questions\nconst getRandomQuestions = (allQuestions, num = 5) => {\n  const shuffled = [...allQuestions].sort(() => 0.5 - Math.random());\n  return shuffled.slice(0, num);\n};\n\nfunction FanQuiz() {\n  const [masterQuestions, setMasterQuestions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [user] = useAuthState(auth);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"quizzes\"));\n        const fetchedQuestions = querySnapshot.docs.map(doc => doc.data());\n        setMasterQuestions(fetchedQuestions);\n        setQuestions(getRandomQuestions(fetchedQuestions));\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching questions from Firestore:\", err);\n        setError(\"無法載入題目，請稍後再試。\");\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  useEffect(() => {\n    const saveScore = async () => {\n      if (showScore && user) {\n        try {\n          await addDoc(collection(db, \"scores\"), {\n            userName: user.displayName,\n            userId: user.uid,\n            score: score,\n            createdAt: serverTimestamp()\n          });\n        } catch (e) {\n          console.error(\"Error adding document: \", e);\n        }\n      }\n    };\n\n    saveScore();\n  }, [showScore, user, score]);\n\n  const handleAnswerOptionClick = (selectedOption) => {\n    const currentQ = questions[currentQuestion];\n    const isCorrect = selectedOption === currentQ.answer;\n\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    setUserAnswers(prevAnswers => [\n      ...prevAnswers,\n      {\n        question: currentQ.question,\n        correctAnswer: currentQ.answer,\n        userAnswer: selectedOption,\n        isCorrect: isCorrect,\n      },\n    ]);\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const resetQuiz = useCallback(() => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n    setQuestions(getRandomQuestions(masterQuestions));\n    setUserAnswers([]);\n  }, [masterQuestions]);\n\n  const generateShareContent = () => {\n    const shareText = `我在 염세빈 粉絲小遊戲中獲得了 ${score} 分！快來挑戰看看你的分數！`;\n    const shareUrl = window.location.href;\n    return { shareText, shareUrl };\n  };\n\n  const handleShareLink = () => {\n    const { shareText, shareUrl } = generateShareContent();\n    const fullShareLink = `${shareText} ${shareUrl}`;\n    navigator.clipboard.writeText(fullShareLink).then(() => {\n      alert('分享連結已複製到剪貼簿！');\n    }).catch(err => {\n      console.error('無法複製分享連結:', err);\n    });\n  };\n\n  const handleShareLine = () => {\n    const { shareText, shareUrl } = generateShareContent();\n    const lineMessage = `${shareText} ${shareUrl}`;\n    const lineShareUrl = `https://line.me/R/msg/text/?${encodeURIComponent(lineMessage)}`;\n    window.open(lineShareUrl, '_blank');\n  };\n\n  const ogImageUrl = `yeomsebeen_field.jpg`;\n\n  return (\n    <div className=\"fan-quiz-container\">\n      <Helmet>\n        <title>염세빈 粉絲小遊戲！</title>\n        <meta property=\"og:title\" content=\"염세빈 粉絲小遊戲！\" />\n        <meta property=\"og:description\" content=\"快來挑戰看看你對廉世彬的了解程度！\" />\n        <meta property=\"og:image\" content={`https://storage.googleapis.com/yeom-se-been-fanpage-assets/${ogImageUrl}`} />\n        <meta property=\"og:url\" content={window.location.href} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={`https://storage.googleapis.com/yeom-se-been-fanpage-assets/${ogImageUrl}`} />\n      </Helmet>\n      <h2>염세빈 粉絲小遊戲！</h2>\n\n      {loading && (\n        <div className=\"text-center\">\n          <Spinner animation=\"border\" variant=\"light\" />\n          <p className=\"text-white-50 mt-2\">載入中...</p>\n        </div>\n      )}\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n\n      {!loading && !error && (\n        showScore ? (\n          <div className=\"score-section\">\n            <div className=\"score-text\">你獲得了 {score} 分，總分 {questions.length} 分！</div>\n            <div className=\"score-buttons\">\n              <button onClick={handleShareLink} className=\"quiz-button share-link-button\"><FiLink /></button>\n              <button onClick={resetQuiz} className=\"quiz-button play-again-button\"><FiRefreshCcw /></button>\n              <button onClick={handleShareLine} className=\"quiz-button share-line-button\"><FaLine /></button>\n            </div>\n\n            <div className=\"quiz-answers-summary mt-4\">\n              <h3>作答結果</h3>\n              {userAnswers.map((item, index) => (\n                <div key={index} className=\"answer-item mb-3 p-3 border rounded\">\n                  <p><strong>問題 {index + 1}:</strong> {item.question}</p>\n                  <p><strong>你的答案:</strong> <span style={{ color: item.isCorrect ? '#28a745' : '#dc3545' }}>{item.userAnswer}</span></p>\n                  {!item.isCorrect && (\n                    <p><strong>正確答案:</strong> <span style={{ color: '#28a745' }}>{item.correctAnswer}</span></p>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          questions.length > 0 && (\n            <div className=\"question-section\">\n              <div className=\"question-count\">\n                <span>問題 {currentQuestion + 1}</span>/{questions.length}\n              </div>\n              <div className=\"question-text\">\n                {questions[currentQuestion]?.question}\n              </div>\n              <div className=\"answer-section\">\n                {questions[currentQuestion]?.options.map((option, index) => (\n                  <button key={index} onClick={() => handleAnswerOptionClick(option)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )\n        )\n      )}\n\n      <Accordion defaultActiveKey=\"0\" className=\"mt-5\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>排行榜</Accordion.Header>\n          <Accordion.Body>\n            <Leaderboard />\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default FanQuiz;"],"names":["Leaderboard","scores","setScores","useState","useEffect","scoresCollection","collection","db","q","query","orderBy","limit","unsubscribe","onSnapshot","querySnapshot","scoresData","docs","map","doc","id","data","getRankClass","index","_jsx","className","children","_jsxs","Table","striped","bordered","hover","responsive","variant","score","_score$createdAt","FaTrophy","userName","Date","createdAt","toDate","toLocaleDateString","getRandomQuestions","allQuestions","num","arguments","length","undefined","sort","Math","random","slice","_questions$currentQue","_questions$currentQue2","masterQuestions","setMasterQuestions","questions","setQuestions","currentQuestion","setCurrentQuestion","setScore","showScore","setShowScore","loading","setLoading","error","setError","userAnswers","setUserAnswers","user","useAuthState","auth","async","fetchedQuestions","getDocs","err","console","fetchQuestions","addDoc","displayName","userId","uid","serverTimestamp","e","saveScore","resetQuiz","useCallback","generateShareContent","shareText","shareUrl","window","location","href","ogImageUrl","Helmet","property","content","name","Spinner","animation","Alert","onClick","handleShareLink","fullShareLink","navigator","clipboard","writeText","then","alert","catch","FiLink","FiRefreshCcw","handleShareLine","lineShareUrl","encodeURIComponent","open","FaLine","item","question","style","color","isCorrect","userAnswer","correctAnswer","options","option","selectedOption","currentQ","answer","prevAnswers","nextQuestion","handleAnswerOptionClick","Accordion","defaultActiveKey","Item","eventKey","Header","Body"],"sourceRoot":""}